@Html.Bootstrap().Heading1("Clearfix").Id("clearfix")
@using (Html.Bootstrap().Container().Begin())
{
    @using (Html.Bootstrap().Div().Background(BgColor.Info).Clearfix().Begin())
    {
        @Html.Bootstrap().Button("Example Button floated left").State(ButtonState.Secondary).Float(Float.Start)
        @Html.Bootstrap().Button("Example Button floated right").State(ButtonState.Secondary).Float(Float.End)
    }
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Color & background").Id("colorbg")
@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Heading2("Overview")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Primary).Padding(3).Content("Primary with contrasting color")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Secondary).Padding(3).Content("Secondary with contrasting color")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Success).Padding(3).Content("Success with contrasting color")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Danger).Padding(3).Content("Danger with contrasting color")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Warning).Padding(3).Content("Warning with contrasting color")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Info).Padding(3).Content("Info with contrasting color")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Light).Padding(3).Content("Light with contrasting color")
    @Html.Bootstrap().Div().TextBackground(TextBgState.Dark).Padding(3).Content("Dark with contrasting color")
    <hr />
    @Html.Bootstrap().Heading2("With components")
    @Html.Bootstrap().Badge("Primary").TextBackground(TextBgState.Primary)
    @Html.Bootstrap().Badge("Info").TextBackground(TextBgState.Info)
    <br />
    <br />
    @using (Html.Bootstrap().Card("Header").MaxWidth(18, LengthUnit.RootElement).TextBackground(TextBgState.Primary).Margin(Margin.Bottom, 3).Begin())
    {
        @Html.Bootstrap().Paragraph("Some quick example text to build on the card title and make up the bulk of the card's content.").Css(Css.CardText)
    }
    @using (Html.Bootstrap().Card("Header").MaxWidth(18, LengthUnit.RootElement).TextBackground(TextBgState.Info).Margin(Margin.Bottom, 3).Begin())
    {
        @Html.Bootstrap().Paragraph("Some quick example text to build on the card title and make up the bulk of the card's content.").Css(Css.CardText)
    }
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Colored links").Id("coloredlinks")
@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Link("Primary link").Color(LinkColor.Primary)
    @Html.Bootstrap().Link("Secondary link").Color(LinkColor.Secondary)
    @Html.Bootstrap().Link("Success link").Color(LinkColor.Success)
    @Html.Bootstrap().Link("Danger link").Color(LinkColor.Danger)
    @Html.Bootstrap().Link("Warning link").Color(LinkColor.Warning)
    @Html.Bootstrap().Link("Info link").Color(LinkColor.Info)
    @Html.Bootstrap().Link("Light link").Color(LinkColor.Light)
    @Html.Bootstrap().Link("Dark link").Color(LinkColor.Dark)
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Position").Id("position")
@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Div().Position(Fixed.Top).Content("fixed-top")
    @Html.Bootstrap().Div().Position(Fixed.Bottom).Content("fixed-top")
    @Html.Bootstrap().Div().Position(Sticky.Top).Content("sticky-top")
    @Html.Bootstrap().Div().Position(Sticky.Bottom).Content("sticky-bottom")

    @Html.Bootstrap().Div().Position(Sticky.Top, Breakpoint.Small).Content("Stick to the top on viewports sized SM (small) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Top, Breakpoint.Medium).Content("Stick to the top on viewports sized MD (medium) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Top, Breakpoint.Large).Content("Stick to the top on viewports LG (large) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Top, Breakpoint.XLarge).Content("Stick to the top on viewports sized XL (extra-large) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Top, Breakpoint.XXLarge).Content("Stick to the top on viewports sized XXL (extra-extra-large) or wider")

    @Html.Bootstrap().Div().Position(Sticky.Bottom, Breakpoint.Small).Content("Stick to the bottom on viewports sized SM (small) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Bottom, Breakpoint.Medium).Content("Stick to the bottom on viewports sized MD (medium) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Bottom, Breakpoint.Large).Content("Stick to the bottom on viewports LG (large) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Bottom, Breakpoint.XLarge).Content("Stick to the bottom on viewports sized XL (extra-large) or wider")
    @Html.Bootstrap().Div().Position(Sticky.Bottom, Breakpoint.XXLarge).Content("Stick to the bottom on viewports sized XXL (extra-extra-large) or wider")
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Ratio").Id("ratio")
@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Heading2("Example")
    @Html.Bootstrap().Div().Ratio(Ratio._16x9).Content(Html.Bootstrap().IFrame("https://www.youtube.com/embed/zpOULjyy-n8?rel=0", title:"Youtube video", allowFullscreen:true))
    <hr />
    @Html.Bootstrap().Heading2("Aspect ratios")
    @using (Html.Bootstrap().Div().Width(640).Begin())
    {
        @Html.Bootstrap().Div().Background(BgColor.Info, true).Ratio(Ratio._1x1).Content(Html.Bootstrap().Div().Content("1x1"))
        @Html.Bootstrap().Div().Background(BgColor.Info, true).Ratio(Ratio._4x3).Content(Html.Bootstrap().Div().Content("4x3"))
        @Html.Bootstrap().Div().Background(BgColor.Info, true).Ratio(Ratio._16x9).Content(Html.Bootstrap().Div().Content("16x9"))
        @Html.Bootstrap().Div().Background(BgColor.Info, true).Ratio(Ratio._21x9).Content(Html.Bootstrap().Div().Content("21x9"))
    }
    <hr />
    @Html.Bootstrap().Heading2("Custom ratios")
    @using (Html.Bootstrap().Div().Width(640).Begin())
    {
        @Html.Bootstrap().Div().Background(BgColor.Info).Ratio(50).Content(Html.Bootstrap().Div().Content("2x1"))
    }
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Stacks").Id("stacks")
@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Heading2("Vertical")
    @using (Html.Bootstrap().Div().Stack(Stack.Vertical, Gap._3).Begin())
    {
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("First item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("Second item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("Third item")
    }
    @Html.Bootstrap().Heading2("Horizontal")
    @using (Html.Bootstrap().Div().Stack(Stack.Horizontal, Gap._3).Begin())
    {
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("First item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("Second item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("Third item")
    }
    @using (Html.Bootstrap().Div().Stack(Stack.Horizontal, Gap._3).Begin())
    {
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("First item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Margin(Margin.Start).Content("Second item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("Third item")
    }
    @using (Html.Bootstrap().Div().Stack(Stack.Horizontal, Gap._3).Begin())
    {
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("First item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Margin(Margin.Start).Content("Second item")
        @Html.Bootstrap().Div().Css(Css.Vr)
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("Third item")
    }
    @Html.Bootstrap().Heading2("Examples")
    @using (Html.Bootstrap().Div().Stack(Stack.Vertical, Gap._2).Margin(Margin.Horizontal).Css(Css.ColMd5).Begin())
    {
        @Html.Bootstrap().Button().State(ButtonState.Secondary).Content("Save changes")
        @Html.Bootstrap().Button().Outline(ButtonOutlineState.Secondary).Content("Cancel")
    }
    <br />
    @using (Html.Bootstrap().Div().Stack(Stack.Horizontal, Gap._3).Begin())
    {
        @Html.Bootstrap().FormInput().Margin(Margin.End).Placeholder("Add your item here...")
        @Html.Bootstrap().Button().State(ButtonState.Secondary).Content("Submit")
        @Html.Bootstrap().Div().Css(Css.Vr)
        @Html.Bootstrap().Button().Outline(ButtonOutlineState.Danger).Content("Reset")
    }
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Stretched link").Id("stretchedlink")
@using (Html.Bootstrap().Container().Begin())
{
    @using (var card = Html.Bootstrap().Card().NoCardBody().Width(18, LengthUnit.RootElement).Begin())
    {
        @Html.Bootstrap().Image("http://picsum.photos/200","photo").Css(Css.CardImgTop)
        @using (card.Body().Begin())
        {
            @card.Title("Card with stretched link")
            @card.Text("Some quick example text to build on the card title and make up the bulk of the card's content.")
            @Html.Bootstrap().LinkButton("Go somewhere").Stretched()
        }
    }
    <br />
    @using (Html.Bootstrap().Div().Display(Display.Flex).Position(Position.Relative).Begin())
    {
        @Html.Bootstrap().Image("http://picsum.photos/200","photo").Flex(FlexAbility.Shrink0).Margin(Margin.End, 3)
        @using (Html.Bootstrap().Div().Begin())
        {
            @Html.Bootstrap().Heading5("Custom component with stretched link").Margin(Margin.Top, 0)
            @Html.Bootstrap().Paragraph("This is some placeholder content for the custom component. It is intended to mimic what some real-world content would look like, and we're using it here to give the component a bit of body and size.")
            @Html.Bootstrap().Link("Go somewhere").Stretched()
        }
    }
    <br />
    @using (var row = Html.Bootstrap().Row().Gutter(Gutter.All, 0).Background(BgColor.Light).Position(Position.Relative).Begin())
    {
        @using (var col = @row.Column().Columnize(6, Breakpoint.Medium).Margin(Margin.Bottom, 0, Breakpoint.Medium).Padding(4, Breakpoint.Medium).Begin())
        {
            @Html.Bootstrap().Image("http://picsum.photos/200","photo").Css(Css.W100)
        }
        @using (var col = @row.Column().Columnize(6, Breakpoint.Medium).Padding(4).Padding(Padding.Start, 0, Breakpoint.Medium).Begin())
        {
            @Html.Bootstrap().Heading5("Columns with stretched link").Margin(Margin.Top, 0)
            @Html.Bootstrap().Paragraph("Another instance of placeholder content for this other custom component. It is intended to mimic what some real-world content would look like, and we're using it here to give the component a bit of body and size.")
            @Html.Bootstrap().Link("Go somewhere").Stretched()
        }
    }
    <hr />
    @Html.Bootstrap().Heading2("Identifying the containing block")
    @using (var card = Html.Bootstrap().Card().NoCardBody().Width(18, LengthUnit.RootElement).Begin())
    {
        @Html.Bootstrap().Image("http://picsum.photos/200","photo").Css(Css.CardImgTop)
        @using (card.Body().Begin())
        {
            @card.Title("Card with stretched links")
            @card.Text("Some quick example text to build on the card title and make up the bulk of the card's content.")
            @card.Text(Html.Bootstrap().Link().Stretched().Color(TextColor.Danger).Style("position","relative").Content("Stretched link will not work here, because <code>position: relative</code> is added to the link",true))
            @using (card.Text().Background(BgColor.Light).Style("transform", "rotate(0)").Begin())
            {
                @Html.Raw("This ")
                @Html.Bootstrap().Link("stretched link").Color(TextColor.Warning).Stretched()
                @Html.Raw(" will only be spread over the <code>p</code>-tag, because a transform is applied to it.")
            }
        }
    }
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Text truncation").Id("texttruncation")
@using (Html.Bootstrap().Container().Begin())
{
    @using (var row = Html.Bootstrap().Row().Begin())
    {
        @row.Column().Columnize(2).Truncate().Content("This text is quite long, and will be truncated once displayed.")
    }
    @Html.Bootstrap().Span().Display(Display.InlineBlock).Truncate().MaxWidth(150).Content("This text is quite long, and will be truncated once displayed.")
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Vertical rule").Id("verticalrule")
@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Heading2("Example")
    @Html.Bootstrap().Div().VR()
    <br />
    @Html.Bootstrap().Div().Display(Display.Flex).Height(200).Content(Html.Bootstrap().Div().VR())
    <hr />
    @Html.Bootstrap().Heading2("With stacks")
    @using (Html.Bootstrap().Div().Stack(Stack.Horizontal, Gap._3).Begin())
    {
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("First item")
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Margin(Margin.Start).Content("Second item")
        @Html.Bootstrap().Div().VR()
        @Html.Bootstrap().Div().Background(BgColor.Light).Border(Border.All).Content("Third item")
    }
}
@Html.Bootstrap().Element("hr").Border(Border.All5, BorderColor.Dark)
@Html.Bootstrap().Heading1("Visually hidden").Id("visuallyhidden")
@using (Html.Bootstrap().Container().Begin())
{
    @Html.Bootstrap().Heading2().VisuallyHidden().Content("Title for screen readers")
    @Html.Bootstrap().Link("Skip to main content","#content").VisuallyHidden(true)
    @using (Html.Bootstrap().Div().VisuallyHidden(true).Begin())
    {
        @Html.Raw("A container with a ")
        @Html.Bootstrap().Link("focusable element")
        @Html.Raw(".")
    }
}